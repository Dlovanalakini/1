$GCD euclidian
a=input('first number:');
b=input('second number:');
a=abs(a);
b=abs(b);
r=a-b*floor(a/b);
while r~=0
    a=b;
    b=r;
    r=a-b*floor(a/b);
end
GCD=b
_____________________________________________________________
$hill cipher Encrypt

%size key daxl ka
n = input('Enter the size of key matrix: ');
%matrix daxl ka 1 b 1
disp('Enter the key matrix:');
a = zeros(n, n);
for i = 1:n
    for j = 1:n
        a(i, j) = input(['Enter element for position (' num2str(i) ', ' num2str(j) '): ']);
    end
end


s = input('Enter the message to encrypt: ', 's');


temp = mod(n - mod(numel(s), n), n);
s = [s, repmat('x', 1, temp)];

k = 1;
ans = '';
while k <= numel(s)
    for i = 1:n
        sum = 0;
        temp = k;
        for j = 1:n
            sum = sum + mod(a(i, j), 26) * mod((s(temp) - 'a'), 26);
            sum = mod(sum, 26);
            temp = temp + 1;
        end
        ans = [ans, char(mod(sum, 26) + 'a')];
    end
    k = k + n;
end
disp(['Encrypted message: ', ans]);
____________________________________
$hill cipher decrypt
clc;
clear;
k = [2 3; 3 6];
c = 'atdvqsbofz';
c = upper(c);
d = mod(round(det(k)), 26);
a = [1 3 5 7 9 11 15 17 19 21 23 25];
b = [1 9 21 15 3 19 7 23 11 5 17 25];
s = find(a == d);
if isempty(s)
    error('error');
end
id = b(s);
adj = round(inv(k) * det(k));
adj = mod(adj, 26);
ik = mod(adj * id, 26);
p = zeros(1, length(c));
for i = 1:2:length(c)-1
    r = double(c(i:i+1)) - 65;
    p(i:i+1) = mod(ik * r', 26);
end
p = char(p + 97);
disp(['Decrypted message: ', p]);
------------------------------------------------------------
